/** @file problem-2.cpp
 *  @brief Even Fibonacci numbers
 *  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 *  By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 *   By considering the terms in the Fibonacci sequence whose values do not exceed four million,
	 find the sum of the even-valued terms.

 *  @author Hooman Salamat
 *  @bug No known bugs.
 */


#include <iostream>
#include <vector>
using namespace std;

int main()
{
	vector<int> terms;
	vector<int> evenTerms;
	int sum = 2;
	int a = 1;
	int b = 2;

	int term = 0;;
	terms.push_back(1);
	terms.push_back(2);
	int i = 2;

	evenTerms.push_back(2);

	while (true)
	{
		term = a + b;
		a = b;
		b = term;
		if (term < 4000000)
		{
			terms.push_back(term);
			if (b % 2 == 0)
			{
				sum += b;
				evenTerms.push_back(b);
			}
		}
		else
			break;
	}
	
	cout << endl;  "the fibonacci terms : ";
	for (auto t : terms)
	{
		cout << t << ", ";
	}

	cout << endl <<  "even terms : ";
	for (auto t : evenTerms)
	{
		cout << t << ", ";
	}

	cout << "\n sum of even valued terms = " << sum << endl;
}
